{"version":3,"sources":["components/GlobalStyle.js","components/Input.js","components/ToDo.js","components/colors.js","components/Separator.js","components/ProgressBar.js","components/Home.js","components/ToggleButton.js","components/Config.js","components/App.js","serviceWorker.js","index.js"],"names":["createGlobalStyle","_templateObject","InputField","styled","input","withConfig","displayName","componentId","Input","_this","this","_this$props","props","name","placeholder","label","react_default","a","createElement","htmlFor","onKeyUp","event","key","handleSubmit","onSubmit","target","value","Component","Wrapper","div","Button","button","ToDo","text","onToggle","onDelete","done","className","onClick","section","Line","Text","span","Separator","Separator_Wrapper","Progress","width","ProgressBar","ProgressBar_Wrapper","Home","state","todos","loadArray","renderSingleToDo","todo","ToDo_ToDo","id","updateArray","deleteTodoItem","addInputToArray","setState","uid","concat","Object","toConsumableArray","index","findIndex","slice","objectSpread","_this2","save","Input_Input","ProgressBar_ProgressBar","determineProgress","renderOpenToDos","showDoneTodos","renderDoneToDos","filter","length","Fragment","Separator_Separator","map","JSON","parse","localStorage","getItem","err","setItem","stringify","ToggleButton","isDefault","lastPropsIsDefault","defaultText","alternativeText","ToggleButton_Button","Config","ToggleButton_ToggleButton","App","toggleShowDoneTodos","BrowserRouter","App_Wrapper","Route","path","exact","render","Home_Home","Config_Config","NavLink","to","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","App_App","GlobalStyle","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"wkBAEeA,kBAAfC,iGCCMC,EAAaC,IAAOC,MAAVC,WAAA,CAAAC,YAAA,oBAAAC,YAAA,gBAAGJ,CAAH,wJAcKK,mLACV,IAAAC,EAAAC,KAAAC,EAC8BD,KAAKE,MAAlCC,EADDF,EACCE,KAAMC,EADPH,EACOG,YAAaC,EADpBJ,EACoBI,MAC3B,OACEC,EAAAC,EAAAC,cAAA,SAAOC,QAASN,GACbE,EACDC,EAAAC,EAAAC,cAAChB,EAAD,CACEW,KAAMA,EACNC,YAAaA,EACbM,QAAS,SAAAC,GAAK,MACE,UAAdA,EAAMC,IAAkBb,EAAKc,aAAaF,GAAS,4CAOhDA,GACO,UAAdA,EAAMC,MACRZ,KAAKE,MAAMY,SAASH,GACpBA,EAAMI,OAAOC,MAAQ,WApBQC,aCb7BC,EAAUzB,IAAO0B,IAAVxB,WAAA,CAAAC,YAAA,gBAAAC,YAAA,YAAGJ,CAAH,+IAYP2B,EAAS3B,IAAO4B,OAAV1B,WAAA,CAAAC,YAAA,eAAAC,YAAA,YAAGJ,CAAH,iNCfY,UADC,WDkCJ6B,mLACV,IAAArB,EACoCD,KAAKE,MAAxCqB,EADDtB,EACCsB,KAAMC,EADPvB,EACOuB,SAAUC,EADjBxB,EACiBwB,SAAUC,EAD3BzB,EAC2ByB,KAElC,OACEpB,EAAAC,EAAAC,cAACU,EAAD,KACEZ,EAAAC,EAAAC,cAAA,QAAMmB,UAAWD,EAAO,OAAS,GAAIE,QAASJ,GAC3CD,GAEHjB,EAAAC,EAAAC,cAACY,EAAD,CAAQQ,QAASH,GAAjB,gBAT0BR,aE/B5BC,EAAUzB,IAAOoC,QAAVlC,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAGJ,CAAH,sCAKPqC,EAAOrC,IAAO0B,IAAVxB,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,iEAMJsC,EAAOtC,IAAOuC,KAAVrC,WAAA,CAAAC,YAAA,kBAAAC,YAAA,gBAAGJ,CAAH,2CAKWwC,mLAEjB,OACE3B,EAAAC,EAAAC,cAAC0B,EAAD,KACE5B,EAAAC,EAAAC,cAACsB,EAAD,MACAxB,EAAAC,EAAAC,cAACuB,EAAD,KAAO/B,KAAKE,MAAMqB,MAClBjB,EAAAC,EAAAC,cAACsB,EAAD,cAN+Bb,aCfjCC,EAAUzB,IAAO0B,IAAVxB,WAAA,CAAAC,YAAA,uBAAAC,YAAA,YAAGJ,CAAH,4EFJY,WEUnB0C,EAAW1C,IAAO0B,IAAVxB,WAAA,CAAAC,YAAA,wBAAAC,YAAA,YAAGJ,CAAH,gGFVW,UEed,SAAAS,GAAK,OAAIA,EAAMkC,QAGLC,mLAEjB,OACE/B,EAAAC,EAAAC,cAAC8B,EAAD,KACEhC,EAAAC,EAAAC,cAAC2B,EAAD,CAAUC,MAA0B,IAAnBpC,KAAKE,MAAMkC,gBAJKnB,aCVpBsB,6MACnBC,MAAQ,CACNC,MAAO1C,EAAK2C,eA2CdC,iBAAmB,SAAAC,GACjB,OACEtC,EAAAC,EAAAC,cAACqC,EAAD,CACEjC,IAAKgC,EAAKE,GACVvB,KAAMqB,EAAKrB,KACXG,KAAMkB,EAAKlB,KACXF,SAAU,kBAAMzB,EAAKgD,YAAYH,EAAKE,KACtCrB,SAAU,kBAAM1B,EAAKiD,eAAeJ,EAAKE,UAK/CG,gBAAkB,SAAAtC,GAChBZ,EAAKmD,SAAS,CACZT,MAAK,CACH,CAAElB,KAAMZ,EAAMI,OAAOC,MAAOU,MAAM,EAAOoB,GAAIK,QAD1CC,OAAAC,OAAAC,EAAA,EAAAD,CAEAtD,EAAKyC,MAAMC,aAKpBM,YAAc,SAAAD,GAAM,IACVL,EAAU1C,EAAKyC,MAAfC,MACFc,EAAQd,EAAMe,UAAU,SAAAZ,GAAI,OAAIA,EAAKE,KAAOA,IAC5CF,EAAOH,EAAMc,GACnBxD,EAAKmD,SAAS,CACZT,MAAMY,OAAAC,EAAA,EAAAD,CACDZ,EAAMgB,MAAM,EAAGF,IADfH,OAAA,CAAAC,OAAAK,EAAA,EAAAL,CAAA,GAEET,EAFF,CAEQlB,MAAOkB,EAAKlB,QAFpB2B,OAAAC,EAAA,EAAAD,CAGAZ,EAAMgB,MAAMF,EAAQ,UAK7BP,eAAiB,SAAAF,GAAM,IACbL,EAAU1C,EAAKyC,MAAfC,MACFc,EAAQd,EAAMe,UAAU,SAAAZ,GAAI,OAAIA,EAAKE,KAAOA,IAClD/C,EAAKmD,SAAS,CACZT,MAAMY,OAAAC,EAAA,EAAAD,CAAKZ,EAAMgB,MAAM,EAAGF,IAArBH,OAAAC,OAAAC,EAAA,EAAAD,CAAgCZ,EAAMgB,MAAMF,EAAQ,gFA9EpD,IAAAI,EAAA3D,KAEP,OADAA,KAAK4D,OAEHtD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACqD,EAAD,CACE1D,KAAK,aACLE,MAAM,oCACND,YAAY,uBACZU,SAAU,SAAAH,GAAK,OAAIgD,EAAKV,gBAAgBtC,MAE1CL,EAAAC,EAAAC,cAACsD,EAAD,CAAa1B,MAAOpC,KAAK+D,sBACxB/D,KAAKgE,kBACLhE,KAAKE,MAAM+D,eAAiBjE,KAAKkE,+DAKpB,IACVzB,EAAUzC,KAAKwC,MAAfC,MACR,OAAOA,EAAM0B,OAAO,SAAAvB,GAAI,OAAIA,EAAKlB,OAAM0C,OAAS3B,EAAM2B,iDAItD,OACE9D,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACE/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAW/C,KAAK,UACfvB,KAAKwC,MAAMC,MAAM0B,OAAO,SAAAvB,GAAI,OAAKA,EAAKlB,OAAM6C,IAAIvE,KAAK2C,6DAM1D,OACErC,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACE/D,EAAAC,EAAAC,cAAC8D,EAAD,CAAW/C,KAAK,SACfvB,KAAKwC,MAAMC,MAAM0B,OAAO,SAAAvB,GAAI,OAAIA,EAAKlB,OAAM6C,IAAIvE,KAAK2C,uDAgDzD,IACE,OAAO6B,KAAKC,MAAMC,aAAaC,QAAQ,gBAAkB,GACzD,MAAOC,GACP,MAAO,mCAKTF,aAAaG,QAAQ,aAAcL,KAAKM,UAAU9E,KAAKwC,MAAMC,eAhG/BxB,aCJ5BG,EAAS3B,IAAO4B,OAAV1B,WAAA,CAAAC,YAAA,uBAAAC,YAAA,eAAGJ,CAAH,0KJJa,UACD,WImBHsF,6MACnBvC,MAAQ,CACNwC,UAAmC,MAAxBjF,EAAKG,MAAM8E,WAA2BjF,EAAKG,MAAM8E,UAC5DC,mBAAoBlF,EAAKG,MAAM8E,mFAcxB,IAAA/E,EACkCD,KAAKE,MAAtCgF,EADDjF,EACCiF,YAAaC,EADdlF,EACckF,gBACbH,EAAchF,KAAKwC,MAAnBwC,UAER,OACE1E,EAAAC,EAAAC,cAAC4E,EAAD,CAAQxD,QAAS5B,KAAKE,MAAM0B,SACzBoD,EAAYE,EAAcC,sDAjBDjF,EAAOsC,GAGrC,OAFkBA,EAAMyC,qBAAuB/E,EAAM8E,UAGjD,KACA,CACEA,UAAW9E,EAAM8E,UACjBC,mBAAoB/E,EAAM8E,kBAbM/D,aCjBrBoE,mLAEjB,OACE/E,EAAAC,EAAAC,cAAC8E,EAAD,CACEJ,YAAY,kBACZC,gBAAgB,kBAChBvD,QAAS5B,KAAKE,MAAM0B,QACpBoD,UAAWhF,KAAKE,MAAM+D,uBAPMhD,aCK9BC,EAAUzB,IAAO0B,IAAVxB,WAAA,CAAAC,YAAA,eAAAC,YAAA,eAAGJ,CAAH,oUNPW,UADC,UACD,UADC,WMsCJ8F,6MACnB/C,MAAQ,CAAEyB,eAAe,KA+BzBuB,oBAAsB,WACpBzF,EAAKmD,SAAS,CAAEe,eAAgBlE,EAAKyC,MAAMyB,yFA9BpC,IAAAN,EAAA3D,KACP,OACEM,EAAAC,EAAAC,cAACiF,EAAA,EAAD,KACEnF,EAAAC,EAAAC,cAACkF,EAAD,KACEpF,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACEC,KAAK,IACLC,OAAK,EACLC,OAAQ,kBAAMxF,EAAAC,EAAAC,cAACuF,EAAD,CAAM9B,cAAeN,EAAKnB,MAAMyB,mBAEhD3D,EAAAC,EAAAC,cAACmF,EAAA,EAAD,CACEC,KAAK,WACLE,OAAQ,kBACNxF,EAAAC,EAAAC,cAACwF,EAAD,CACEpE,QAAS+B,EAAK6B,oBACdvB,cAAeN,EAAKnB,MAAMyB,mBAIhC3D,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAASJ,OAAK,EAACK,GAAG,KAAlB,QAGA5F,EAAAC,EAAAC,cAACyF,EAAA,EAAD,CAASC,GAAG,YAAZ,oBAzBqBjF,aC1B3BkF,EAAcC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DAsCN,SAASC,EAAgBC,EAAOC,GAC9BC,UAAUC,cACPC,SAASJ,GACTK,KAAK,SAAAC,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1E,QACfoE,UAAUC,cAAcQ,YAI1BC,QAAQC,IACN,gHAKEZ,GAAUA,EAAOa,UACnBb,EAAOa,SAASR,KAMlBM,QAAQC,IAAI,sCAGRZ,GAAUA,EAAOc,WACnBd,EAAOc,UAAUT,UAO5BU,MAAM,SAAAC,GACLL,QAAQK,MAAM,4CAA6CA,KCzFjEC,IAAS9B,OACPxF,EAAAC,EAAAC,cAACF,EAAAC,EAAM8D,SAAP,KACE/D,EAAAC,EAAAC,cAACqH,EAAD,MACAvH,EAAAC,EAAAC,cAACsH,EAAD,OAEFC,SAASC,eAAe,SDUnB,SAAkBrB,GACvB,GAA6C,kBAAmBC,UAAW,CAGzE,GADkB,IAAIqB,IAAIC,cAAwB7B,OAAOC,SAAS6B,MACpDC,SAAW/B,OAAOC,SAAS8B,OAIvC,OAGF/B,OAAOgC,iBAAiB,OAAQ,WAC9B,IAAM3B,EAAK,GAAAtD,OAAM8E,cAAN,sBAEP/B,GAgEV,SAAiCO,EAAOC,GAEtC2B,MAAM5B,GACHK,KAAK,SAAAwB,GAEJ,IAAMC,EAAcD,EAASE,QAAQC,IAAI,gBAEnB,MAApBH,EAASI,QACO,MAAfH,IAA8D,IAAvCA,EAAYI,QAAQ,cAG5ChC,UAAUC,cAAcgC,MAAM9B,KAAK,SAAAC,GACjCA,EAAa8B,aAAa/B,KAAK,WAC7BV,OAAOC,SAASyC,aAKpBtC,EAAgBC,EAAOC,KAG1Be,MAAM,WACLJ,QAAQC,IACN,mEArFAyB,CAAwBtC,EAAOC,GAI/BC,UAAUC,cAAcgC,MAAM9B,KAAK,WACjCO,QAAQC,IACN,+GAMJd,EAAgBC,EAAOC,MChC/BE","file":"static/js/main.81e4ceb9.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components'\n\nexport default createGlobalStyle`\nbody {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  margin: 0;\n  padding: 0;\n  -moz-osx-font-smoothing: grayscale;\n  -webkit-font-smoothing: antialiased;\n}\n\n* {\n  box-sizing: border-box;\n}\n`\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst InputField = styled.input`\n  margin: 0.5em 0 1em 0;\n  font-size: 22px;\n  caret-color: #151d36;\n  color: #151d36;\n  width: 80vw;\n  border: none;\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 2px 2px #a6fde5;\n  }\n`\n\nexport default class Input extends Component {\n  render() {\n    const { name, placeholder, label } = this.props\n    return (\n      <label htmlFor={name}>\n        {label}\n        <InputField\n          name={name}\n          placeholder={placeholder}\n          onKeyUp={event =>\n            event.key === 'Enter' ? this.handleSubmit(event) : ''\n          }\n        />\n      </label>\n    )\n  }\n\n  handleSubmit(event) {\n    if (event.key === 'Enter') {\n      this.props.onSubmit(event)\n      event.target.value = ''\n    }\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { turquoise, darkblue } from './colors'\n\nconst Wrapper = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-top: 0.75em;\n  margin-bottom: 0.75em;\n\n  .done {\n    text-decoration: line-through;\n  }\n`\n\nconst Button = styled.button`\n  width: 1.2em;\n  height: 1.2em;\n  font-size: 22px;\n  border: none;\n  color: ${darkblue};\n  border-radius: 50%;\n  background: ${turquoise};\n  text-align: center;\n  vertical-align: center;\n  margin-left: 1em;\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 2px 2px #a6fde5;\n  }\n`\n\nexport default class ToDo extends Component {\n  render() {\n    const { text, onToggle, onDelete, done } = this.props\n\n    return (\n      <Wrapper>\n        <span className={done ? 'done' : ''} onClick={onToggle}>\n          {text}\n        </span>\n        <Button onClick={onDelete}>&times;</Button>\n      </Wrapper>\n    )\n  }\n}\n","export const turquoise = '#a6fde5'\nexport const darkblue = '#151d36'\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Wrapper = styled.section`\n  display: flex;\n  align-items: center;\n`\n\nconst Line = styled.div`\n  width: 100%;\n  margin: 0.75em 0;\n  border-bottom: 1px solid #a6fde5;\n`\n\nconst Text = styled.span`\n  white-space: nowrap;\n  margin: 0.75em 1em;\n`\n\nexport default class Separator extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Line />\n        <Text>{this.props.text}</Text>\n        <Line />\n      </Wrapper>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { turquoise } from './colors'\n\nconst Wrapper = styled.div`\n  border: 1px solid ${turquoise};\n  border-radius: 9px;\n  margin: 0.75em 0;\n  overflow: hidden;\n`\nconst Progress = styled.div`\n  background: ${turquoise};\n  border-radius: 0 8px 8px 0;\n  height: 18px;\n  transition: width 0.5s ease;\n  width: ${props => props.width}%;\n`\n\nexport default class ProgressBar extends Component {\n  render() {\n    return (\n      <Wrapper>\n        <Progress width={this.props.width * 100} />\n      </Wrapper>\n    )\n  }\n}\n\n//auch als styled.div mit zus. Element &::after möglich\n","import React, { Component } from 'react'\nimport uid from 'uid'\n\nimport Input from './Input'\nimport ToDo from './ToDo'\nimport Separator from './Separator'\nimport ProgressBar from './ProgressBar'\n\nexport default class Home extends Component {\n  state = {\n    todos: this.loadArray()\n  }\n\n  render() {\n    this.save()\n    return (\n      <div>\n        <Input\n          name=\"task-input\"\n          label=\"What do you want to keep in mind?\"\n          placeholder=\"Breathe and smile :)\"\n          onSubmit={event => this.addInputToArray(event)}\n        />\n        <ProgressBar width={this.determineProgress()} />\n        {this.renderOpenToDos()}\n        {this.props.showDoneTodos && this.renderDoneToDos()}\n      </div>\n    )\n  }\n\n  determineProgress() {\n    const { todos } = this.state\n    return todos.filter(todo => todo.done).length / todos.length\n  }\n\n  renderOpenToDos() {\n    return (\n      <React.Fragment>\n        <Separator text=\"to do\" />\n        {this.state.todos.filter(todo => !todo.done).map(this.renderSingleToDo)}\n      </React.Fragment>\n    )\n  }\n\n  renderDoneToDos() {\n    return (\n      <React.Fragment>\n        <Separator text=\"done\" />\n        {this.state.todos.filter(todo => todo.done).map(this.renderSingleToDo)}\n      </React.Fragment>\n    )\n  }\n\n  renderSingleToDo = todo => {\n    return (\n      <ToDo\n        key={todo.id}\n        text={todo.text}\n        done={todo.done}\n        onToggle={() => this.updateArray(todo.id)}\n        onDelete={() => this.deleteTodoItem(todo.id)}\n      />\n    )\n  }\n\n  addInputToArray = event => {\n    this.setState({\n      todos: [\n        { text: event.target.value, done: false, id: uid() },\n        ...this.state.todos\n      ]\n    })\n  }\n\n  updateArray = id => {\n    const { todos } = this.state\n    const index = todos.findIndex(todo => todo.id === id)\n    const todo = todos[index]\n    this.setState({\n      todos: [\n        ...todos.slice(0, index),\n        { ...todo, done: !todo.done },\n        ...todos.slice(index + 1)\n      ]\n    })\n  }\n\n  deleteTodoItem = id => {\n    const { todos } = this.state\n    const index = todos.findIndex(todo => todo.id === id)\n    this.setState({\n      todos: [...todos.slice(0, index), ...todos.slice(index + 1)]\n    })\n  }\n\n  loadArray() {\n    try {\n      return JSON.parse(localStorage.getItem('to-do list')) || []\n    } catch (err) {\n      return []\n    }\n  }\n\n  save() {\n    localStorage.setItem('to-do list', JSON.stringify(this.state.todos))\n  }\n}\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { turquoise, darkblue } from './colors'\n\nconst Button = styled.button`\n  background: ${turquoise};\n  border-radius: 5px;\n  border: none;\n  color: ${darkblue};\n  font-size: 22px;\n  font-size: 22px;\n  height: 1.2em;\n  margin: 0.75em;\n\n  &:focus {\n    outline: none;\n    box-shadow: 0 0 2px 2px #a6fde5;\n  }\n`\n\nexport default class ToggleButton extends Component {\n  state = {\n    isDefault: this.props.isDefault == null ? true : this.props.isDefault,\n    lastPropsIsDefault: this.props.isDefault\n  }\n\n  static getDerivedStateFromProps(props, state) {\n    const isTheSame = state.lastPropsIsDefault === props.isDefault\n\n    return isTheSame\n      ? null\n      : {\n          isDefault: props.isDefault,\n          lastPropsIsDefault: props.isDefault\n        }\n  }\n\n  render() {\n    const { defaultText, alternativeText } = this.props\n    const { isDefault } = this.state\n\n    return (\n      <Button onClick={this.props.onClick}>\n        {isDefault ? defaultText : alternativeText}\n      </Button>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport ToggleButton from './ToggleButton'\n\nexport default class Config extends Component {\n  render() {\n    return (\n      <ToggleButton\n        defaultText=\"hide done tasks\"\n        alternativeText=\"show done tasks\"\n        onClick={this.props.onClick}\n        isDefault={this.props.showDoneTodos}\n      />\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, NavLink } from 'react-router-dom'\nimport styled from 'styled-components'\nimport { turquoise, darkblue } from './colors'\n\nimport Home from './Home'\nimport Config from './Config'\n\nconst Wrapper = styled.div`\n  display: grid;\n  grid-template-rows: auto 50px;\n  background: ${darkblue};\n  color: ${turquoise};\n  font-size: 22px;\n  height: 100vh;\n  padding: 1em;\n\n  nav {\n    display: flex;\n    justify-content: space-around;\n    align-items: center;\n  }\n\n  a:any-link {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    text-decoration: none;\n    color: ${darkblue};\n    background: ${turquoise};\n    width: 100%;\n\n    &.active {\n      color: white;\n    }\n  }\n`\n\nexport default class App extends Component {\n  state = { showDoneTodos: true }\n\n  render() {\n    return (\n      <Router>\n        <Wrapper>\n          <Route\n            path=\"/\"\n            exact\n            render={() => <Home showDoneTodos={this.state.showDoneTodos} />}\n          />\n          <Route\n            path=\"/config/\"\n            render={() => (\n              <Config\n                onClick={this.toggleShowDoneTodos}\n                showDoneTodos={this.state.showDoneTodos}\n              />\n            )}\n          />\n          <nav>\n            <NavLink exact to=\"/\">\n              Home\n            </NavLink>\n            <NavLink to=\"/config/\">Config</NavLink>\n          </nav>\n        </Wrapper>\n      </Router>\n    )\n  }\n\n  toggleShowDoneTodos = () => {\n    this.setState({ showDoneTodos: !this.state.showDoneTodos })\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport GlobalStyle from './components/GlobalStyle'\n\nimport App from './components/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n    <GlobalStyle />\n  </React.Fragment>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}